//오프라인
buildscript {
    ext {
        springBootVersion = '2.2.4.RELEASE'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'kr.co.olivar'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}
dependencies {
    //init
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    //spring security
    //implementation 'org.springframework.boot:spring-boot-starter-security'


    //embed Tomcat Starter
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    //Database
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
    implementation 'org.mybatis:mybatis:3.5.3' // sql Mapper 라이브러리
    implementation 'org.mybatis:mybatis-spring:2.0.3' // 스프링과 Mybatis를 연결
    implementation 'org.springframework.boot:spring-boot-starter-jdbc' // DataSource에 필요한 클래스 제공

    //multipart
    compileOnly 'commons-io:commons-io:2.6'
    compileOnly 'org.apache.commons:commons-lang3:3.9'

    //etc
    compileOnly 'javax.servlet:jstl'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.json:json:20190722'

    //libs jar 추가
    compile fileTree(dir: 'libs', include: ['*.jar'])


}
/*
bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}

 */